//==============================================================================
/**
 * File Name:   GUIFileLoader.java
 *
 * Written By: Elicia Pluymers
 * 2023 CS Capstone Project AiAlgorithms
 **/
//==============================================================================

package userInterface;

/*
 * Import Statements
 */
import java.awt.event.*;
import javax.swing.*;
import javax.swing.JFrame;
import javax.swing.filechooser.*;
import java.io.*;

/*
 * Class: programLoader
 * Package: userInterface
 * Implements: ActionListener
 * Description: Program Main and Static methods to create windows.
 */
public class GUIFileLoader implements ActionListener 
{
	/*
	 * Local Class Variables
	 */
	private JFrame mainLoader;
	private JComboBox<String> dataType;
	private JComboBox<String> algorithmType;
	private JFrame fileLoader;
	private JFileChooser loadFile;
	private JLabel chooseFileLabel;
	private File dataFile;
	private static String[] dataStrings = {"Graph", "NQueens"};
	private static String[] algorithmStrings = {"widthFirstSearch", 
												"depthFirstSearch", 
												"depthLimitedAlgorithm",
												"uniformCostAlgorithm", 
												"iterativeDeepeningSearch",
												"greedyAlgorithm", 
												"bidirectionalSearchAlgorithm", 
												"hillClimbingSearch", 
												"localBeamSearch", 
												"simulatedAnnealing", 
												"aStartSearch"};
	
	/*
	 * Constructor
	 */
	public GUIFileLoader()
	{
		//Selection Window Components
		mainLoader = new JFrame();
		mainLoader.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		
		JPanel contentPanel1 = new JPanel();
		JPanel contentPanel2 = new JPanel();
		JPanel contentPanel3 = new JPanel();
		JPanel contentPanel4 = new JPanel();
		contentPanel4.setLayout(new BoxLayout(contentPanel4, BoxLayout.PAGE_AXIS));
		
		chooseFileLabel = new JLabel("Select a file to load data from:");
		JButton chooseFile = new JButton("Choose a file...");
		chooseFile.setActionCommand("FileSelect");
		chooseFile.addActionListener(this);
		
		JLabel dataTypeLabel = new JLabel("Choose the data model that matches the data file:");
		dataType = new JComboBox<String>(dataStrings);
		dataType.setSelectedIndex(0);
		
		JLabel algorithmTypeLabel = new JLabel("Choose which algorithm to use:");
		algorithmType = new JComboBox<String>(algorithmStrings);
		algorithmType.setSelectedIndex(0);
		
		JButton startProgram = new JButton("Begin");
		startProgram.setActionCommand("beginProgram");
		startProgram.addActionListener(this);
				
		contentPanel1.add(chooseFile);
		contentPanel1.add(chooseFileLabel);
		contentPanel2.add(dataTypeLabel);
		contentPanel2.add(dataType);
		contentPanel3.add(algorithmTypeLabel);
		contentPanel3.add(algorithmType);
		contentPanel4.add(contentPanel1);
		contentPanel4.add(contentPanel2);
		contentPanel4.add(contentPanel3);
		contentPanel4.add(startProgram);
		
		mainLoader.getContentPane().add(contentPanel4);
		mainLoader.pack();
		mainLoader.setLocationRelativeTo(null);
		
		//File Loader Window Components
		fileLoader = new JFrame();
		fileLoader.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		
		loadFile = new JFileChooser();
		FileNameExtensionFilter fileFilter = new FileNameExtensionFilter("Text Files Only", "txt");
		loadFile.setFileFilter(fileFilter);
	}
	
	/*
	 * Function: createLoaderScreen
	 * Description: Set the mainLoader defined in constructor to visible
	 */
	public void createLoaderScreen()
	{	
		mainLoader.setVisible(true);
	}
	
	/*
	 * Function: actionPerformed
	 * Description: Handle all button events generated by Objects
	 */
	public void actionPerformed(ActionEvent e)
	{
		if("FileSelect".equals(e.getActionCommand()))
		{
			fileLoader.setLocationRelativeTo(null);
			fileLoader.setVisible(true);
			int chooserReturn = loadFile.showOpenDialog(fileLoader);
			if(chooserReturn == JFileChooser.APPROVE_OPTION)
			{
				dataFile = loadFile.getSelectedFile();
				chooseFileLabel.setText(dataFile.toString());
			}
			fileLoader.dispatchEvent(new WindowEvent(fileLoader, WindowEvent.WINDOW_CLOSING));
			mainLoader.pack();
		}
		if("beginProgram".equals(e.getActionCommand()))
		{
			mainLoader.dispatchEvent(new WindowEvent(mainLoader, WindowEvent.WINDOW_CLOSING));
			
			programLoader.createUserView(dataFile, (String)dataType.getSelectedItem(), (String)algorithmType.getSelectedItem());
		}
	}
}
